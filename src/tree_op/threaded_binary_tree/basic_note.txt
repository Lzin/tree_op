线索化二叉树的基本介绍
    1.n个节点的二叉链表会有着n+1个空指针 2*n-(n-1)=n+1 个空指针域。
    2.利用二叉链表的空指针域，存放指向该节点在某种遍历次序下的前驱和后继节点的指针【这种附加的指针称为线索】
    3.这样加上了线索的二叉链表被称为线索链表，相应的二叉树称为线索二叉树（Threaded BinaryTree）
        根据线索性质的不同，线索二叉树可以分为前序线索二叉树，中序线索二叉树和后序线索二叉树
    4.一个节点的前一个节点称为前驱节点，后一个节点称为后继节点

    当线索化二叉树后，Node节点的属性left和right有着如下的情况
        1.left指向的是左子树，也可能指向的是前驱节点
        2.right指向的是右子树，也可能指向的是后继节点

如何遍历线索化二叉树
    在线索化之后，各个节点指向有所变化，所以原来的遍历方式不能使用(如果按照原始的递归方案的话 永远也不会停下来...)，因此要使用新的遍历方法来遍历线索化二叉树
    各个节点之间可以通过线性方式进行遍历


